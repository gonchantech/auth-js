{
	"id": 0,
	"name": "@supabase/auth-js",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1235,
			"name": "AuthApiError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1236,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 33,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1237,
							"name": "new AuthApiError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1238,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1239,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1240,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1235,
								"name": "AuthApiError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1226,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 1242,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1243,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1231,
						"name": "AuthError.code"
					}
				},
				{
					"id": 1241,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"overwrites": {
						"type": "reference",
						"id": 1233,
						"name": "AuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1236
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1242,
						1241
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 30,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1225,
					"name": "AuthError"
				}
			]
		},
		{
			"id": 1225,
			"name": "AuthError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1226,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1227,
							"name": "new AuthError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1228,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1229,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1230,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1225,
								"name": "AuthError"
							},
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Error.constructor"
					}
				},
				{
					"id": 1231,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1232,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					}
				},
				{
					"id": 1233,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1226
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1231,
						1233
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 4,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Error",
					"package": "typescript",
					"name": "Error"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1235,
					"name": "AuthApiError"
				},
				{
					"type": "reference",
					"id": 1245,
					"name": "AuthUnknownError"
				},
				{
					"type": "reference",
					"id": 1255,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1292,
			"name": "AuthImplicitGrantRedirectError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1293,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 90,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1294,
							"name": "new AuthImplicitGrantRedirectError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1295,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1296,
									"name": "details",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1297,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1299,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 90,
																	"character": 57
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1298,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 90,
																	"character": 42
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1299,
																1298
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 1292,
								"name": "AuthImplicitGrantRedirectError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1257,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1256,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1316,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1317,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1264,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 1300,
					"name": "details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 89,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1301,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1303,
											"name": "code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 89,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1302,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 89,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1303,
												1302
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 1314,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1262,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1315,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1263,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 1304,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 95,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1305,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1306,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1310,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 100,
													"character": 6
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1311,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 1313,
																	"name": "code",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 89,
																			"character": 28
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1312,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 89,
																			"character": 13
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		1313,
																		1312
																	]
																}
															]
														}
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 1308,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 98,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1307,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 97,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1309,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 99,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1310,
												1308,
												1307,
												1309
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1293
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1316,
						1300,
						1314,
						1315
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1304
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 88,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1255,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1283,
			"name": "AuthInvalidCredentialsError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1284,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 83,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1285,
							"name": "new AuthInvalidCredentialsError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1286,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1283,
								"name": "AuthInvalidCredentialsError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1257,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1256,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1289,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1290,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1264,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 1287,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1262,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1288,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1263,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1284
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1289,
						1287,
						1288
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 82,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1255,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1368,
			"name": "AuthInvalidJwtError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1369,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 162,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1370,
							"name": "new AuthInvalidJwtError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1371,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1368,
								"name": "AuthInvalidJwtError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1257,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1256,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1374,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1375,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1264,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 1372,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1262,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1373,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1263,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1369
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1374,
						1372,
						1373
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 161,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1255,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1275,
			"name": "AuthInvalidTokenResponseError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1276,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 77,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1277,
							"name": "new AuthInvalidTokenResponseError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1275,
								"name": "AuthInvalidTokenResponseError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1257,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1256,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1280,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1281,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1264,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 1278,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1262,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1279,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1263,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1276
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1280,
						1278,
						1279
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 76,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1255,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1319,
			"name": "AuthPKCEGrantCodeExchangeError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1320,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 114,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1321,
							"name": "new AuthPKCEGrantCodeExchangeError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1322,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1323,
									"name": "details",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1324,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1326,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 114,
																	"character": 57
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1325,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 114,
																	"character": 42
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1326,
																1325
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 1319,
								"name": "AuthPKCEGrantCodeExchangeError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1257,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1256,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1343,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1344,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1264,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 1327,
					"name": "details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 112,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1328,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1330,
											"name": "code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 112,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1329,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 112,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1330,
												1329
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 1341,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1262,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1342,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1263,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 1331,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 119,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1332,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1333,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1337,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 124,
													"character": 6
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1338,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 1340,
																	"name": "code",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 112,
																			"character": 28
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1339,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 112,
																			"character": 13
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		1340,
																		1339
																	]
																}
															]
														}
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 1335,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 122,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1334,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 121,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1336,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 123,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1337,
												1335,
												1334,
												1336
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1320
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1343,
						1327,
						1341,
						1342
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1331
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 111,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1255,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1346,
			"name": "AuthRetryableFetchError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1347,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 130,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1348,
							"name": "new AuthRetryableFetchError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1349,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1350,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1346,
								"name": "AuthRetryableFetchError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1257,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1256,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1353,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1354,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1264,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 1351,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1262,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1352,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1263,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1347
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1353,
						1351,
						1352
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 129,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1255,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1267,
			"name": "AuthSessionMissingError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1268,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 67,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1269,
							"name": "new AuthSessionMissingError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1267,
								"name": "AuthSessionMissingError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1257,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1256,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1272,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1273,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1264,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 1270,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1262,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1271,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1263,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1268
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1272,
						1270,
						1271
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 66,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1255,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1245,
			"name": "AuthUnknownError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1246,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1247,
							"name": "new AuthUnknownError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1248,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1249,
									"name": "originalError",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1245,
								"name": "AuthUnknownError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1226,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 1251,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1252,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1231,
						"name": "AuthError.code"
					}
				},
				{
					"id": 1250,
					"name": "originalError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 46,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 1253,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1233,
						"name": "AuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1246
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1251,
						1250,
						1253
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 45,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1225,
					"name": "AuthError"
				}
			]
		},
		{
			"id": 1356,
			"name": "AuthWeakPasswordError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "This error is thrown on certain methods when the password used is deemed\nweak. Inspect the reasons to identify what password strength rules are\ninadequate."
			},
			"children": [
				{
					"id": 1357,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 150,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1358,
							"name": "new AuthWeakPasswordError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1359,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1360,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1361,
									"name": "reasons",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1356,
								"name": "AuthWeakPasswordError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1257,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1256,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1365,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1366,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1264,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 1363,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1262,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1362,
					"name": "reasons",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Reasons why the password is deemed weak."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 148,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 579,
							"name": "WeakPasswordReasons"
						}
					}
				},
				{
					"id": 1364,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1263,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1357
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1365,
						1363,
						1362,
						1364
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 144,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1255,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1255,
			"name": "CustomAuthError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1256,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 59,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1257,
							"name": "new CustomAuthError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1258,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1259,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1260,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1261,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1255,
								"name": "CustomAuthError"
							},
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1226,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 1264,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1265,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"name": "ErrorCode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1231,
						"name": "AuthError.code"
					}
				},
				{
					"id": 1262,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "AuthError.name"
					}
				},
				{
					"id": 1263,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"overwrites": {
						"type": "reference",
						"id": 1233,
						"name": "AuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1256
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1264,
						1262,
						1263
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 55,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1225,
					"name": "AuthError"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1267,
					"name": "AuthSessionMissingError"
				},
				{
					"type": "reference",
					"id": 1275,
					"name": "AuthInvalidTokenResponseError"
				},
				{
					"type": "reference",
					"id": 1283,
					"name": "AuthInvalidCredentialsError"
				},
				{
					"type": "reference",
					"id": 1292,
					"name": "AuthImplicitGrantRedirectError"
				},
				{
					"type": "reference",
					"id": 1319,
					"name": "AuthPKCEGrantCodeExchangeError"
				},
				{
					"type": "reference",
					"id": 1346,
					"name": "AuthRetryableFetchError"
				},
				{
					"type": "reference",
					"id": 1356,
					"name": "AuthWeakPasswordError"
				},
				{
					"type": "reference",
					"id": 1368,
					"name": "AuthInvalidJwtError"
				}
			]
		},
		{
			"id": 1,
			"name": "GoTrueAdminApi",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 37,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new GoTrueAdminApi",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 4,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 11,
													"name": "fetch",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 46,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 12,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 13,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 14,
																			"name": "input",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"qualifiedName": "RequestInfo",
																						"package": "typescript",
																						"name": "RequestInfo"
																					},
																					{
																						"type": "reference",
																						"qualifiedName": "URL",
																						"package": "typescript",
																						"name": "URL"
																					}
																				]
																			}
																		},
																		{
																			"id": 15,
																			"name": "init",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "reference",
																				"qualifiedName": "RequestInit",
																				"package": "typescript",
																				"name": "RequestInit"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"qualifiedName": "Response",
																				"package": "typescript",
																				"name": "Response"
																			}
																		],
																		"qualifiedName": "Promise",
																		"package": "typescript",
																		"name": "Promise"
																	}
																}
															]
														}
													}
												},
												{
													"id": 7,
													"name": "headers",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 43,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 8,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"indexSignature": {
																"id": 9,
																"name": "__index",
																"kind": 8192,
																"kindString": "Index signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 10,
																		"name": "key",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													}
												},
												{
													"id": 6,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 42,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														11,
														7,
														6
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 16,
					"name": "mfa",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Contains all MFA administration methods."
					},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 29,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1107,
						"name": "GoTrueAdminMFAApi"
					}
				},
				{
					"id": 44,
					"name": "createUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 160,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 45,
							"name": "createUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
							},
							"parameters": [
								{
									"id": 46,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 760,
										"name": "AdminUserAttributes"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 677,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 68,
					"name": "deleteUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 280,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "deleteUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete a user. Requires a `service_role` key."
							},
							"parameters": [
								{
									"id": 70,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The user id you want to remove."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 71,
									"name": "shouldSoftDelete",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\nDefaults to false for backward compatibility.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 677,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 41,
					"name": "generateLink",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 126,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 42,
							"name": "generateLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates email links and OTPs to be sent via a custom email provider."
							},
							"parameters": [
								{
									"id": 43,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 962,
										"name": "GenerateLinkParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 963,
										"name": "GenerateLinkResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 61,
					"name": "getUserById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 229,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "getUserById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get user by id."
							},
							"parameters": [
								{
									"id": 63,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 677,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 34,
					"name": "inviteUserByEmail",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 93,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 35,
							"name": "inviteUserByEmail",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends an invite link to an email address."
							},
							"parameters": [
								{
									"id": 36,
									"name": "email",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The email address of the user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Additional options to be included when inviting.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 38,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 39,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column."
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 97,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 40,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL."
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 100,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														39,
														40
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 677,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 47,
					"name": "listUsers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 182,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 48,
							"name": "listUsers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of users.",
								"text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
							},
							"parameters": [
								{
									"id": 49,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
									},
									"type": {
										"type": "reference",
										"id": 1134,
										"name": "PageParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 50,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 51,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 185,
																	"character": 8
																}
															],
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 52,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 54,
																					"name": "aud",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/GoTrueAdminApi.ts",
																							"line": 185,
																							"character": 31
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 53,
																					"name": "users",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/GoTrueAdminApi.ts",
																							"line": 185,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"id": 728,
																							"name": "User"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						54,
																						53
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"id": 1127,
																		"name": "Pagination"
																	}
																]
															}
														},
														{
															"id": 55,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 185,
																	"character": 59
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																51,
																55
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 56,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 57,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 186,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 58,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 59,
																			"name": "users",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueAdminApi.ts",
																					"line": 186,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "tuple"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				59
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 60,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 186,
																	"character": 29
																}
															],
															"type": {
																"type": "reference",
																"id": 1225,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																57,
																60
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 27,
					"name": "signOut",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 62,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "signOut",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a logged-in session."
							},
							"parameters": [
								{
									"id": 29,
									"name": "jwt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A valid, logged-in JWT."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The logout sope.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "global"
											},
											{
												"type": "literal",
												"value": "local"
											},
											{
												"type": "literal",
												"value": "others"
											}
										]
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 31,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 32,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 65,
															"character": 15
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 33,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 65,
															"character": 27
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1225,
																"name": "AuthError"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														32,
														33
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 64,
					"name": "updateUserById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 253,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 65,
							"name": "updateUserById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Updates the user data."
							},
							"parameters": [
								{
									"id": 66,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 67,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
									},
									"type": {
										"type": "reference",
										"id": 760,
										"name": "AdminUserAttributes"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 677,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						16
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						44,
						68,
						41,
						61,
						34,
						47,
						27,
						64
					]
				}
			],
			"sources": [
				{
					"fileName": "src/GoTrueAdminApi.ts",
					"line": 27,
					"character": 21
				}
			]
		},
		{
			"id": 78,
			"name": "GoTrueClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 80,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 204,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "new GoTrueClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new client for use in the browser."
							},
							"parameters": [
								{
									"id": 82,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 557,
										"name": "GoTrueClientOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 78,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 84,
					"name": "admin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Namespace for the GoTrue admin methods.\nThese methods should only be used in a trusted server-side environment."
					},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 146,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "default"
					}
				},
				{
					"id": 85,
					"name": "mfa",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Namespace for the MFA methods."
					},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 150,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1058,
						"name": "GoTrueMFAApi"
					}
				},
				{
					"id": 149,
					"name": "exchangeCodeForSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 611,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "exchangeCodeForSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in an existing user by exchanging an Auth Code issued during the PKCE flow."
							},
							"parameters": [
								{
									"id": 151,
									"name": "authCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 627,
										"name": "AuthTokenResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 500,
					"name": "getClaims",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 2980,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 501,
							"name": "getClaims",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "experimental",
										"text": "This method may change in future versions."
									},
									{
										"tag": "description",
										"text": "Gets the claims from a JWT. If the JWT is symmetric JWTs, it will call getUser() to verify against the server. If the JWT is asymmetric, it will be verified against the JWKS using the WebCrypto API.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 502,
									"name": "jwt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 503,
									"name": "jwks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 504,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 505,
													"name": "keys",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 2982,
															"character": 12
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1198,
															"name": "JWK"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														505
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 506,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 507,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 2985,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 508,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 509,
																			"name": "claims",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 2985,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 1194,
																				"name": "JwtPayload"
																			}
																		},
																		{
																			"id": 510,
																			"name": "header",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 2985,
																					"character": 36
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 1179,
																				"name": "JwtHeader"
																			}
																		},
																		{
																			"id": 511,
																			"name": "signature",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 2985,
																					"character": 55
																				}
																			],
																			"type": {
																				"type": "reference",
																				"qualifiedName": "Uint8Array",
																				"package": "typescript",
																				"name": "Uint8Array"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				509,
																				510,
																				511
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 512,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 2986,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																507,
																512
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 513,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 514,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 2988,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 515,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 2988,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"id": 1225,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																514,
																515
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 516,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 517,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 2989,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 518,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 2989,
																	"character": 20
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																517,
																518
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 209,
					"name": "getSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1170,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 210,
							"name": "getSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the session, refreshing it if necessary.",
								"text": "The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n\n**IMPORTANT:** This method loads values directly from the storage attached\nto the client. If that storage is based on request cookies for example,\nthe values in it may not be authentic and therefore it's strongly advised\nagainst using this method and its results in such circumstances. A warning\nwill be emitted if this is detected. Use {@link #getUser()} instead.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 211,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 212,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1263,
																	"character": 12
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 213,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 214,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 1264,
																					"character": 14
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 688,
																				"name": "Session"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				214
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 215,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1266,
																	"character": 12
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																212,
																215
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 216,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 217,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1269,
																	"character": 12
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 218,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 219,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 1270,
																					"character": 14
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": null
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				219
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 220,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1272,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"id": 1225,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																217,
																220
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 221,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 222,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1275,
																	"character": 12
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 223,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 224,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 1276,
																					"character": 14
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": null
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				224
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 225,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1278,
																	"character": 12
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																222,
																225
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 272,
					"name": "getUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1414,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 273,
							"name": "getUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current user details if there is an existing session. This method\nperforms a network request to the Supabase Auth server, so the returned\nvalue is authentic and can be used to base authorization rules on."
							},
							"parameters": [
								{
									"id": 274,
									"name": "jwt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 677,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 381,
					"name": "getUserIdentities",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1972,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 382,
							"name": "getUserIdentities",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all the identities linked to a user."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 383,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 384,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1974,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 385,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 386,
																			"name": "identities",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 1975,
																					"character": 10
																				}
																			],
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 701,
																					"name": "UserIdentity"
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				386
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 387,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1977,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																384,
																387
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 388,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 389,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1979,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 390,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1979,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"id": 1225,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																389,
																390
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 133,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 313,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 134,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Initializes the client session either from the url or from storage.\nThis method is automatically called when instantiating the client, but should also be called\nmanually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc)."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1117,
										"name": "InitializeResult"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 391,
					"name": "linkIdentity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1996,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 392,
							"name": "linkIdentity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Links an oauth identity to an existing user.\nThis method supports the PKCE flow."
							},
							"parameters": [
								{
									"id": 393,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 835,
										"name": "SignInWithOAuthCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 655,
										"name": "OAuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 353,
					"name": "onAuthStateChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1870,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 354,
							"name": "onAuthStateChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Receive a notification every time an auth event happens."
							},
							"parameters": [
								{
									"id": 355,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A callback function to be invoked when an auth event happens.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 356,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 357,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 358,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 547,
																"name": "AuthChangeEvent"
															}
														},
														{
															"id": 359,
															"name": "session",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 688,
																		"name": "Session"
																	}
																]
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 360,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 361,
											"name": "data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/GoTrueClient.ts",
													"line": 1873,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 362,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 363,
															"name": "subscription",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1873,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"id": 773,
																"name": "Subscription"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																363
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												361
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 202,
					"name": "reauthenticate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1086,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 203,
							"name": "reauthenticate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends a reauthentication OTP to the user's email or phone number.\nRequires the user to be signed-in."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 585,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 302,
					"name": "refreshSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1619,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 303,
							"name": "refreshSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new session, regardless of expiry status.\nTakes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\nIf the current session's refresh token is invalid, an error will be thrown."
							},
							"parameters": [
								{
									"id": 304,
									"name": "currentSession",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The current session. If passed in, it must contain a refresh token.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 305,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 306,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1619,
															"character": 42
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														306
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 585,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 206,
					"name": "resend",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1121,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 207,
							"name": "resend",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP."
							},
							"parameters": [
								{
									"id": 208,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 910,
										"name": "ResendParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 612,
										"name": "AuthOtpResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 367,
					"name": "resetPasswordForEmail",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1926,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 368,
							"name": "resetPasswordForEmail",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends a password reset request to an email address. This method supports the PKCE flow."
							},
							"parameters": [
								{
									"id": 369,
									"name": "email",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The email address of the user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 370,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 371,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 373,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site.\n"
													},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1930,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 372,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The URL to send the user to after they click the password reset link."
													},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1929,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														373,
														372
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 374,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 375,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1934,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 376,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														},
														{
															"id": 377,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1935,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																375,
																377
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 378,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 379,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1937,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 380,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1937,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"id": 1225,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																379,
																380
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 290,
					"name": "setSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1544,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 291,
							"name": "setSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\nIf the refresh token or access token in the current session is invalid, an error will be thrown."
							},
							"parameters": [
								{
									"id": 292,
									"name": "currentSession",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The current session that minimally contains an access token and refresh token.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 293,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 294,
													"name": "access_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1545,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 295,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1546,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														294,
														295
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 585,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 137,
					"name": "signInAnonymously",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 416,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 138,
							"name": "signInAnonymously",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new anonymous user.",
								"returns": "A session where the is_anonymous claim in the access token JWT set to true\n"
							},
							"parameters": [
								{
									"id": 139,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 781,
										"name": "SignInAnonymouslyCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 585,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 190,
					"name": "signInWithIdToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 879,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 191,
							"name": "signInWithIdToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Allows signing in with an OIDC ID token. The authentication provider used\nshould be enabled and configured."
							},
							"parameters": [
								{
									"id": 192,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 847,
										"name": "SignInWithIdTokenCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 627,
										"name": "AuthTokenResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 146,
					"name": "signInWithOAuth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 599,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 147,
							"name": "signInWithOAuth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in an existing user via a third-party provider.\nThis method supports the PKCE flow."
							},
							"parameters": [
								{
									"id": 148,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 835,
										"name": "SignInWithOAuthCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 655,
										"name": "OAuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 193,
					"name": "signInWithOtp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 934,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 194,
							"name": "signInWithOtp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in a user using magiclink or a one-time password (OTP).",
								"text": "If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\nIf the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\nIf you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n\nBe aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or, that the account\ncan only be accessed via social login.\n\nDo note that you will need to configure a Whatsapp sender on Twilio\nif you are using phone sign in with the 'whatsapp' channel. The whatsapp\nchannel is not supported on other providers\nat this time.\nThis method supports PKCE when an email is passed.\n"
							},
							"parameters": [
								{
									"id": 195,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 817,
										"name": "SignInWithPasswordlessCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 612,
										"name": "AuthOtpResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 143,
					"name": "signInWithPassword",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 536,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 144,
							"name": "signInWithPassword",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in an existing user with an email and password or phone and password.",
								"text": "Be aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or that the\nemail/phone and password combination is wrong or that the account can only\nbe accessed via social login.\n"
							},
							"parameters": [
								{
									"id": 145,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 804,
										"name": "SignInWithPasswordCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 640,
										"name": "AuthTokenResponsePassword"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 199,
					"name": "signInWithSSO",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1048,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 200,
							"name": "signInWithSSO",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts a single-sign on using an enterprise Identity Provider. A\nsuccessful SSO attempt will redirect the current page to the identity\nprovider authorization page. The redirect URL is implementation and SSO\nprotocol specific.",
								"text": "You can use it by providing a SSO domain. Typically you can extract this\ndomain by asking users for their email address. If this domain is\nregistered on the Auth instance the redirect will use that organization's\ncurrently active SSO Identity Provider for the login.\n\nIf you have built an organization-specific login page, you can use the\norganization's SSO Identity Provider UUID directly instead.\n"
							},
							"parameters": [
								{
									"id": 201,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 924,
										"name": "SignInWithSSO"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 668,
										"name": "SSOResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 152,
					"name": "signInWithWeb3",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 623,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 153,
							"name": "signInWithWeb3",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Signs in a user by verifying a message signed by the user's private key.\nOnly Solana supported at this time, using the Sign in with Solana standard."
							},
							"parameters": [
								{
									"id": 154,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 870,
										"name": "SolanaWeb3Credentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 155,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 156,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 625,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 157,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 158,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 625,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 688,
																				"name": "Session"
																			}
																		},
																		{
																			"id": 159,
																			"name": "user",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 625,
																					"character": 34
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 728,
																				"name": "User"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				158,
																				159
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 160,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 626,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																156,
																160
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 161,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 162,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 628,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 163,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 164,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 628,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": null
																			}
																		},
																		{
																			"id": 165,
																			"name": "user",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 628,
																					"character": 31
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": null
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				164,
																				165
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 166,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 628,
																	"character": 45
																}
															],
															"type": {
																"type": "reference",
																"id": 1225,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																162,
																166
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 343,
					"name": "signOut",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1826,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 344,
							"name": "signOut",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.",
								"text": "For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\nThere is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n\nIf using `others` scope, no `SIGNED_OUT` event is fired!\n"
							},
							"parameters": [
								{
									"id": 345,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1138,
										"name": "SignOut"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 346,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 347,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1826,
															"character": 67
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1225,
																"name": "AuthError"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														347
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 140,
					"name": "signUp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 459,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 141,
							"name": "signUp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new user.",
								"text": "Be aware that if a user account exists in the system you may get back an\nerror message that attempts to hide this information from the user.\nThis method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n",
								"returns": "A logged-in session if the server has \"autoconfirm\" ON"
							},
							"parameters": [
								{
									"id": 142,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 787,
										"name": "SignUpWithPasswordCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 585,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 449,
					"name": "startAutoRefresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 2513,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 450,
							"name": "startAutoRefresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts an auto-refresh process in the background. The session is checked\nevery few seconds. Close to the time of expiration a process is started to\nrefresh the session. If refreshing fails it will be retried for as long as\nnecessary.",
								"text": "If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\nto call this function, it will be called for you.\n\nOn browsers the refresh process works only when the tab/window is in the\nforeground to conserve resources as well as prevent race conditions and\nflooding auth with requests. If you call this method any managed\nvisibility change callback will be removed and you must manage visibility\nchanges on your own.\n\nOn non-browser platforms the refresh process works *continuously* in the\nbackground, which may not be desirable. You should hook into your\nplatform's foreground indication mechanism and call these methods\nappropriately to conserve resources.\n\n{@see #stopAutoRefresh}\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 451,
					"name": "stopAutoRefresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 2526,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 452,
							"name": "stopAutoRefresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops an active auto refresh process running in the background (if any).",
								"text": "If you call this method any managed visibility change callback will be\nremoved and you must manage visibility changes on your own.\n\nSee {@link #startAutoRefresh} for more details.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 394,
					"name": "unlinkIdentity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 2032,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 395,
							"name": "unlinkIdentity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked."
							},
							"parameters": [
								{
									"id": 396,
									"name": "identity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 701,
										"name": "UserIdentity"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 397,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 398,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 2034,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 399,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														},
														{
															"id": 400,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 2035,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																398,
																400
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 401,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 402,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 2037,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 403,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 2037,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"id": 1225,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																402,
																403
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 278,
					"name": "updateUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1475,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "updateUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Updates user data for a logged in user."
							},
							"parameters": [
								{
									"id": 280,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 754,
										"name": "UserAttributes"
									}
								},
								{
									"id": 281,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 282,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 283,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1478,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														283
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 677,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "verifyOtp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 987,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "verifyOtp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in a user given a User supplied OTP or TokenHash received through mobile or email."
							},
							"parameters": [
								{
									"id": 198,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 888,
										"name": "VerifyOtpParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 585,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						80
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						84,
						85
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						149,
						500,
						209,
						272,
						381,
						133,
						391,
						353,
						202,
						302,
						206,
						367,
						290,
						137,
						190,
						146,
						193,
						143,
						199,
						152,
						343,
						140,
						449,
						451,
						394,
						278,
						196
					]
				}
			],
			"sources": [
				{
					"fileName": "src/GoTrueClient.ts",
					"line": 137,
					"character": 21
				}
			]
		},
		{
			"id": 529,
			"name": "NavigatorLockAcquireTimeoutError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 530,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 531,
							"name": "new NavigatorLockAcquireTimeoutError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 532,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 529,
								"name": "NavigatorLockAcquireTimeoutError"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LockAcquireTimeoutError.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "LockAcquireTimeoutError.constructor"
					}
				},
				{
					"id": 533,
					"name": "isAcquireTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/locks.ts",
							"line": 24,
							"character": 18
						}
					],
					"type": {
						"type": "literal",
						"value": true
					},
					"defaultValue": "true",
					"inheritedFrom": {
						"type": "reference",
						"name": "LockAcquireTimeoutError.isAcquireTimeout"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						530
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						533
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/locks.ts",
					"line": 31,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "LockAcquireTimeoutError"
				}
			]
		},
		{
			"id": 697,
			"name": "AMREntry",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "An authentication methord reference (AMR) entry.",
				"text": "An entry designates what method was used by the user to verify their\nidentity and at what time.\n",
				"tags": [
					{
						"tag": "see",
						"text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}.\n"
					}
				]
			},
			"children": [
				{
					"id": 698,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Authentication method name."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 281,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "password"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 699,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "literal",
								"value": "otp"
							},
							{
								"type": "literal",
								"value": "oauth"
							},
							{
								"type": "literal",
								"value": "mfa/totp"
							}
						]
					}
				},
				{
					"id": 700,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Timestamp when the method was successfully used. Represents number of\nseconds since 1st January 1970 (UNIX epoch) in UTC."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 287,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						698,
						700
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 279,
					"character": 17
				}
			]
		},
		{
			"id": 760,
			"name": "AdminUserAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 762,
					"name": "app_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
						"text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 419,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 765,
					"name": "ban_duration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Determines how long a user is banned for.",
						"text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 445,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 772,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's email."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 370,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.email"
					}
				},
				{
					"id": 763,
					"name": "email_confirm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Confirms the user's email address if set to true.",
						"text": "Only a service role can modify.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 426,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 768,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The `id` for the user.",
						"text": "Allows you to overwrite the default `id` set for the user.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 470,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 770,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
						"text": "Call reauthenticate() to obtain the nonce first.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 387,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.nonce"
					}
				},
				{
					"id": 769,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's password."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 380,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.password"
					}
				},
				{
					"id": 767,
					"name": "password_hash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The `password_hash` for the user's password.",
						"text": "Allows you to specify a password hash for the user. This is useful for migrating a user's password hash from another service.\n\nSupports bcrypt, scrypt (firebase), and argon2 password hashes.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 463,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 771,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's phone."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 375,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.phone"
					}
				},
				{
					"id": 764,
					"name": "phone_confirm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Confirms the user's phone number if set to true.",
						"text": "Only a service role can modify.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 433,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 766,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The `role` claim set in the user's access token JWT.",
						"text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 454,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 761,
					"name": "user_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
						"text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 409,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						762,
						765,
						772,
						763,
						768,
						770,
						769,
						767,
						771,
						764,
						766,
						761
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 398,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 754,
							"name": "UserAttributes"
						},
						{
							"type": "literal",
							"value": "data"
						}
					],
					"qualifiedName": "Omit",
					"package": "typescript",
					"name": "Omit"
				}
			]
		},
		{
			"id": 713,
			"name": "Factor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "A MFA factor.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link GoTrueMFAApi#enroll}"
					},
					{
						"tag": "see",
						"text": "{@link GoTrueMFAApi#listFactors}"
					},
					{
						"tag": "see",
						"text": "{@link GoTrueMFAAdminApi#listFactors}\n"
					}
				]
			},
			"children": [
				{
					"id": 719,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 325,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 716,
					"name": "factor_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Type of factor. `totp` and `phone` supported with this version"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 320,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 717,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "literal",
								"value": "totp"
							},
							{
								"type": "literal",
								"value": "phone"
							}
						]
					}
				},
				{
					"id": 715,
					"name": "friendly_name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 315,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 714,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the factor."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 312,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 718,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Factor's status."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 323,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "verified"
							},
							{
								"type": "literal",
								"value": "unverified"
							}
						]
					}
				},
				{
					"id": 720,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 326,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						719,
						716,
						715,
						714,
						718,
						720
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 310,
					"character": 17
				}
			]
		},
		{
			"id": 959,
			"name": "GenerateLinkOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 960,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
						"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 810,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 961,
					"name": "redirectTo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The URL which will be appended to the email link generated."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 812,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						960,
						961
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 804,
					"character": 17
				}
			]
		},
		{
			"id": 1107,
			"name": "GoTrueAdminMFAApi",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Contains the full multi-factor authentication administration API.",
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"children": [
				{
					"id": 1111,
					"name": "deleteFactor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1112,
							"name": "deleteFactor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
								"tags": [
									{
										"tag": "see",
										"text": "{@link GoTrueMFAApi#unenroll}\n"
									},
									{
										"tag": "expermental",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1113,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1091,
										"name": "AuthMFAAdminDeleteFactorParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1082,
										"name": "AuthMFAAdminDeleteFactorResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1108,
					"name": "listFactors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1109,
							"name": "listFactors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Lists all factors associated to a user."
							},
							"parameters": [
								{
									"id": 1110,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1104,
										"name": "AuthMFAAdminListFactorsParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1095,
										"name": "AuthMFAAdminListFactorsResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1111,
						1108
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1113,
					"character": 17
				}
			]
		},
		{
			"id": 1058,
			"name": "GoTrueMFAApi",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Contains the full multi-factor authentication API."
			},
			"children": [
				{
					"id": 1066,
					"name": "challenge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1067,
							"name": "challenge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
							},
							"parameters": [
								{
									"id": 1068,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 993,
										"name": "MFAChallengeParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1024,
										"name": "AuthMFAChallengeResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1075,
					"name": "challengeAndVerify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1076,
							"name": "challengeAndVerify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
							},
							"parameters": [
								{
									"id": 1077,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 997,
										"name": "MFAChallengeAndVerifyParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1001,
										"name": "AuthMFAVerifyResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1059,
					"name": "enroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1060,
							"name": "enroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
								"text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
							},
							"parameters": [
								{
									"id": 1061,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1141,
										"name": "MFAEnrollTOTPParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1151,
										"name": "AuthMFAEnrollTOTPResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						},
						{
							"id": 1062,
							"name": "enroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1063,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1146,
										"name": "MFAEnrollPhoneParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1167,
										"name": "AuthMFAEnrollPhoneResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						},
						{
							"id": 1064,
							"name": "enroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1065,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 984,
										"name": "MFAEnrollParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1014,
										"name": "AuthMFAEnrollResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1080,
					"name": "getAuthenticatorAssuranceLevel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1081,
							"name": "getAuthenticatorAssuranceLevel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
								"text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1047,
										"name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1078,
					"name": "listFactors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1079,
							"name": "listFactors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of MFA factors enabled for this user.",
								"tags": [
									{
										"tag": "see",
										"text": "{@link GoTrueMFAApi#enroll}"
									},
									{
										"tag": "see",
										"text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
									},
									{
										"tag": "see",
										"text": "{@link GoTrueClient#getUser}\n\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1035,
										"name": "AuthMFAListFactorsResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1072,
					"name": "unenroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1073,
							"name": "unenroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
							},
							"parameters": [
								{
									"id": 1074,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 985,
										"name": "MFAUnenrollParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1015,
										"name": "AuthMFAUnenrollResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1069,
					"name": "verify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1070,
							"name": "verify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
							},
							"parameters": [
								{
									"id": 1071,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 988,
										"name": "MFAVerifyParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1001,
										"name": "AuthMFAVerifyResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1066,
						1075,
						1059,
						1080,
						1078,
						1072,
						1069
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 998,
					"character": 17
				}
			]
		},
		{
			"id": 1198,
			"name": "JWK",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1201,
					"name": "alg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1291,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1200,
					"name": "key_ops",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1290,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1202,
					"name": "kid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1292,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1199,
					"name": "kty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1289,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "RSA"
							},
							{
								"type": "literal",
								"value": "EC"
							},
							{
								"type": "literal",
								"value": "oct"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1201,
						1200,
						1202,
						1199
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1288,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 1203,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 1204,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 688,
			"name": "Session",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 691,
					"name": "access_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 250,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 694,
					"name": "expires_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 262,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 693,
					"name": "expires_in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 258,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 690,
					"name": "provider_refresh_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 246,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 689,
					"name": "provider_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 241,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 692,
					"name": "refresh_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A one-time used refresh token that never expires."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 254,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 695,
					"name": "token_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 263,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 696,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "When using a separate user storage, accessing properties of this object will throw an error."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 268,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 728,
						"name": "User"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						691,
						694,
						693,
						690,
						689,
						692,
						695,
						696
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 237,
					"character": 17
				}
			]
		},
		{
			"id": 773,
			"name": "Subscription",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 774,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The subscriber UUID. This will be set by the client."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 477,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 775,
					"name": "callback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 481,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 776,
							"name": "callback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The function to call every time there is an event. eg: (eventName) => {}"
							},
							"parameters": [
								{
									"id": 777,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 547,
										"name": "AuthChangeEvent"
									}
								},
								{
									"id": 778,
									"name": "session",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 688,
												"name": "Session"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 779,
					"name": "unsubscribe",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 485,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 780,
							"name": "unsubscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Call this to remove the listener."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						774
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						775,
						779
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 473,
					"character": 17
				}
			]
		},
		{
			"id": 728,
			"name": "User",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 739,
					"name": "action_link",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 349,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 730,
					"name": "app_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 340,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 721,
						"name": "UserAppMetadata"
					}
				},
				{
					"id": 732,
					"name": "aud",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 342,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 733,
					"name": "confirmation_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 343,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 743,
					"name": "confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 353,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 742,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 352,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 753,
					"name": "deleted_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 363,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 740,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 350,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 735,
					"name": "email_change_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 345,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 744,
					"name": "email_confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 354,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 752,
					"name": "factors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 362,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 713,
							"name": "Factor"
						}
					}
				},
				{
					"id": 729,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 339,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 749,
					"name": "identities",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 359,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 701,
							"name": "UserIdentity"
						}
					}
				},
				{
					"id": 738,
					"name": "invited_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 348,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 750,
					"name": "is_anonymous",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 360,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 751,
					"name": "is_sso_user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 361,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 746,
					"name": "last_sign_in_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 356,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 736,
					"name": "new_email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 346,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 737,
					"name": "new_phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 347,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 741,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 351,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 745,
					"name": "phone_confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 355,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 734,
					"name": "recovery_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 344,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 747,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 357,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 748,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 358,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 731,
					"name": "user_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 341,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 725,
						"name": "UserMetadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						739,
						730,
						732,
						733,
						743,
						742,
						753,
						740,
						735,
						744,
						752,
						729,
						749,
						738,
						750,
						751,
						746,
						736,
						737,
						741,
						745,
						734,
						747,
						748,
						731
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 338,
					"character": 17
				}
			]
		},
		{
			"id": 721,
			"name": "UserAppMetadata",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 722,
					"name": "provider",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 330,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						722
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 329,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 723,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 724,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 754,
			"name": "UserAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 759,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
						"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 395,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 755,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's email."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 370,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 758,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
						"text": "Call reauthenticate() to obtain the nonce first.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 387,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 757,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's password."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 380,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 756,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's phone."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 375,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						759,
						755,
						758,
						757,
						756
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 366,
					"character": 17
				}
			]
		},
		{
			"id": 701,
			"name": "UserIdentity",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 710,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 298,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 702,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 291,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 704,
					"name": "identity_data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 293,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 705,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 706,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 707,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				},
				{
					"id": 708,
					"name": "identity_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 296,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 711,
					"name": "last_sign_in_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 299,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 709,
					"name": "provider",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 297,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 712,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 300,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 703,
					"name": "user_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 292,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						710,
						702,
						704,
						708,
						711,
						709,
						712,
						703
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 290,
					"character": 17
				}
			]
		},
		{
			"id": 725,
			"name": "UserMetadata",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 334,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 726,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 727,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 897,
			"name": "VerifyEmailOtpParams",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 898,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's email address."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 700,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 901,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 705,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 902,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 904,
									"name": "captchaToken",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Verification token received when the user completes the captcha on the site.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 713,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 903,
									"name": "redirectTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A URL to send the user to after they are confirmed."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 707,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										904,
										903
									]
								}
							]
						}
					}
				},
				{
					"id": 899,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The otp sent to the user's email address."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 702,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 900,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's verification type."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 704,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 909,
						"name": "EmailOtpType"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						898,
						901,
						899,
						900
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 698,
					"character": 17
				}
			]
		},
		{
			"id": 889,
			"name": "VerifyMobileOtpParams",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 893,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 686,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 894,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 896,
									"name": "captchaToken",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Verification token received when the user completes the captcha on the site.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 695,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 895,
									"name": "redirectTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A URL to send the user to after they are confirmed."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 688,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										896,
										895
									]
								}
							]
						}
					}
				},
				{
					"id": 890,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's phone number."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 681,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 891,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The otp sent to the user's phone number."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 683,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 892,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's verification type."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 685,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 908,
						"name": "MobileOtpType"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						893,
						890,
						891,
						892
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 679,
					"character": 17
				}
			]
		},
		{
			"id": 905,
			"name": "VerifyTokenHashParams",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 906,
					"name": "token_hash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The token hash used in an email link"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 719,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 907,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's verification type."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 722,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 909,
						"name": "EmailOtpType"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						906,
						907
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 717,
					"character": 17
				}
			]
		},
		{
			"id": 547,
			"name": "AuthChangeEvent",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 32,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "INITIAL_SESSION"
					},
					{
						"type": "literal",
						"value": "PASSWORD_RECOVERY"
					},
					{
						"type": "literal",
						"value": "SIGNED_IN"
					},
					{
						"type": "literal",
						"value": "SIGNED_OUT"
					},
					{
						"type": "literal",
						"value": "TOKEN_REFRESHED"
					},
					{
						"type": "literal",
						"value": "USER_UPDATED"
					},
					{
						"type": "reference",
						"id": 546,
						"name": "AuthChangeEventMFA"
					}
				]
			}
		},
		{
			"id": 546,
			"name": "AuthChangeEventMFA",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 30,
					"character": 12
				}
			],
			"type": {
				"type": "literal",
				"value": "MFA_CHALLENGE_VERIFIED"
			}
		},
		{
			"id": 834,
			"name": "AuthFlowType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 599,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "implicit"
					},
					{
						"type": "literal",
						"value": "pkce"
					}
				]
			}
		},
		{
			"id": 1091,
			"name": "AuthMFAAdminDeleteFactorParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1079,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1092,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1093,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the MFA factor to delete."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1081,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1094,
							"name": "userId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the user whose factor is being deleted."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1084,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1093,
								1094
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1079,
							"character": 45
						}
					]
				}
			}
		},
		{
			"id": 1082,
			"name": "AuthMFAAdminDeleteFactorResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1066,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1083,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1084,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1068,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1085,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1086,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the factor that was successfully deleted."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 1070,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1086
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 1068,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 1087,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1072,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1084,
										1087
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1067,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1088,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1089,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1074,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 1090,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1074,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1089,
										1090
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1074,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1104,
			"name": "AuthMFAAdminListFactorsParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1103,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1105,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1106,
							"name": "userId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the user."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1106
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1103,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 1095,
			"name": "AuthMFAAdminListFactorsResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1090,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1096,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1097,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1092,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1098,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1099,
													"name": "factors",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "All factors attached to the user."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 1094,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 713,
															"name": "Factor"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1099
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 1092,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 1100,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1096,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1097,
										1100
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1091,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1101,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1102,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1098,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 1103,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1098,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1102,
										1103
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1098,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1024,
			"name": "AuthMFAChallengeResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 936,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1025,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1026,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 938,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1027,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1030,
													"name": "expires_at",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Timestamp in UNIX seconds when this challenge will no longer be usable."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 946,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1028,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the newly created challenge."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 940,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1029,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Factor Type which generated the challenge"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 943,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "totp"
															},
															{
																"type": "literal",
																"value": "phone"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1030,
														1028,
														1029
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 938,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 1031,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 948,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1026,
										1031
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 937,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1032,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1033,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 950,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 1034,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 950,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1033,
										1034
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 950,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1167,
			"name": "AuthMFAEnrollPhoneResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1245,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1168,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1169,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1247,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1170,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1173,
													"name": "friendly_name",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Friendly name of the factor, useful for distinguishing between factors"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 1255,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1171,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the factor that was just enrolled (in an unverified state)."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 1249,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1174,
													"name": "phone",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Phone number of the MFA factor in E.164 format. Used to send messages"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 1258,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1172,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Type of MFA factor."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 1252,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": "phone"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1173,
														1171,
														1174,
														1172
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 1247,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 1175,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1260,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1169,
										1175
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1246,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1176,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1177,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1263,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 1178,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1264,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1177,
										1178
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1262,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1014,
			"name": "AuthMFAEnrollResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 924,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 1151,
						"name": "AuthMFAEnrollTOTPResponse"
					},
					{
						"type": "reference",
						"id": 1167,
						"name": "AuthMFAEnrollPhoneResponse"
					}
				]
			}
		},
		{
			"id": 1151,
			"name": "AuthMFAEnrollTOTPResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1210,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1152,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1153,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1212,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1154,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1162,
													"name": "friendly_name",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Friendly name of the factor, useful for distinguishing between factors"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 1236,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1155,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the factor that was just enrolled (in an unverified state)."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 1214,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1157,
													"name": "totp",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "TOTP enrollment information."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 1220,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1158,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 1159,
																	"name": "qr_code",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"comment": {
																		"shortText": "Contains a QR code encoding the authenticator URI. You can\nconvert it to a URL by prepending `data:image/svg+xml;utf-8,` to\nthe value. Avoid logging this value to the console."
																	},
																	"sources": [
																		{
																			"fileName": "src/lib/types.ts",
																			"line": 1224,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1160,
																	"name": "secret",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"comment": {
																		"shortText": "The TOTP secret (also encoded in the QR code). Show this secret\nin a password-style field to the user, in case they are unable to\nscan the QR code. Avoid logging this value to the console."
																	},
																	"sources": [
																		{
																			"fileName": "src/lib/types.ts",
																			"line": 1229,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1161,
																	"name": "uri",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"comment": {
																		"shortText": "The authenticator URI encoded within the QR code, should you need\nto use it. Avoid loggin this value to the console."
																	},
																	"sources": [
																		{
																			"fileName": "src/lib/types.ts",
																			"line": 1233,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		1159,
																		1160,
																		1161
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/lib/types.ts",
																	"line": 1220,
																	"character": 14
																}
															]
														}
													}
												},
												{
													"id": 1156,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Type of MFA factor."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 1217,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": "totp"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1162,
														1155,
														1157,
														1156
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 1212,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 1163,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1238,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1153,
										1163
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1211,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1164,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1165,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1241,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 1166,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1242,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1165,
										1166
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1240,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1047,
			"name": "AuthMFAGetAuthenticatorAssuranceLevelResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 969,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1048,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1049,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 971,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1050,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1053,
													"name": "currentAuthenticationMethods",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "A list of all authentication methods attached to this session. Use\nthe information here to detect the last time a user verified a\nfactor, for example if implementing a step-up scenario."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 988,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 697,
															"name": "AMREntry"
														}
													}
												},
												{
													"id": 1051,
													"name": "currentLevel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Current AAL level of the session."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 973,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 1046,
																"name": "AuthenticatorAssuranceLevels"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 1052,
													"name": "nextLevel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Next possible AAL level for the session. If the next level is higher\nthan the current one, the user should go through MFA.",
														"tags": [
															{
																"tag": "see",
																"text": "{@link GoTrueMFAApi#challenge}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 981,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 1046,
																"name": "AuthenticatorAssuranceLevels"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1053,
														1051,
														1052
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 971,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 1054,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 990,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1049,
										1054
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 970,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1055,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1056,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 992,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 1057,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 992,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1056,
										1057
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 992,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1035,
			"name": "AuthMFAListFactorsResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 952,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1036,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1037,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 954,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1038,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1039,
													"name": "all",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "All available factors (verified and unverified)."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 956,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 713,
															"name": "Factor"
														}
													}
												},
												{
													"id": 1041,
													"name": "phone",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Only verified Phone factors. (A subset of `all`.)"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 961,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 713,
															"name": "Factor"
														}
													}
												},
												{
													"id": 1040,
													"name": "totp",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Only verified TOTP factors. (A subset of `all`.)"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 959,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 713,
															"name": "Factor"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1039,
														1041,
														1040
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 954,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 1042,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 963,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1037,
										1042
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 953,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1043,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1044,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 965,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 1045,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 965,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1044,
										1045
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 965,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1015,
			"name": "AuthMFAUnenrollResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 926,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1016,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1017,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 928,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1018,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1019,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the factor that was successfully unenrolled."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 930,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1019
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 928,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 1020,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 932,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1017,
										1020
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 927,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1021,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1022,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 934,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 1023,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 934,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1022,
										1023
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 934,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1001,
			"name": "AuthMFAVerifyResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 899,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1002,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1003,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 901,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1004,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1005,
													"name": "access_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "New access token (JWT) after successful verification."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 903,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1007,
													"name": "expires_in",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Number of seconds in which the access token will expire."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 909,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1008,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Refresh token you can use to obtain new access tokens when expired."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 912,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1006,
													"name": "token_type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Type of token, typically `Bearer`."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 906,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1009,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Updated user profile."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 915,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 728,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1005,
														1007,
														1008,
														1006,
														1009
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 901,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 1010,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 917,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1003,
										1010
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 900,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1011,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1012,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 920,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 1013,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 921,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1012,
										1013
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 919,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 612,
			"name": "AuthOtpResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "AuthOtpResponse is returned when OTP is used.",
				"text": "{@see AuthResponse}\n"
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 144,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 613,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 614,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 146,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 615,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 618,
													"name": "messageId",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 146,
															"character": 41
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 617,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 146,
															"character": 26
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 616,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 146,
															"character": 14
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														618,
														617,
														616
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 146,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 619,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 147,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										614,
										619
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 145,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 620,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 621,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 150,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 622,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 625,
													"name": "messageId",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 150,
															"character": 41
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 624,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 150,
															"character": 26
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 623,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 150,
															"character": 14
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														625,
														624,
														623
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 150,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 626,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 151,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										621,
										626
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 149,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 585,
			"name": "AuthResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 106,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 586,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 587,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 108,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 588,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 590,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 110,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 688,
																"name": "Session"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 589,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 109,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 728,
																"name": "User"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														590,
														589
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 108,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 591,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 112,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										587,
										591
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 107,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 592,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 593,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 115,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 594,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 596,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 117,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 595,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 116,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														596,
														595
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 115,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 597,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 119,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										593,
										597
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 114,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 598,
			"name": "AuthResponsePassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 122,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 599,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 600,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 124,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 601,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 603,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 126,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 688,
																"name": "Session"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 602,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 125,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 728,
																"name": "User"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 604,
													"name": "weak_password",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 127,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 581,
																"name": "WeakPassword"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														603,
														602,
														604
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 124,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 605,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 129,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										600,
										605
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 123,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 606,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 607,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 132,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 608,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 610,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 134,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 609,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 133,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														610,
														609
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 132,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 611,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 136,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										607,
										611
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 131,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 627,
			"name": "AuthTokenResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 154,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 628,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 629,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 156,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 630,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 632,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 158,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 688,
														"name": "Session"
													}
												},
												{
													"id": 631,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 157,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 728,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														632,
														631
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 156,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 633,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 160,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										629,
										633
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 155,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 634,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 635,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 163,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 636,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 638,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 165,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 637,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 164,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														638,
														637
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 163,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 639,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 167,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										635,
										639
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 162,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 640,
			"name": "AuthTokenResponsePassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 170,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 641,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 642,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 172,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 643,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 645,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 174,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 688,
														"name": "Session"
													}
												},
												{
													"id": 644,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 173,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 728,
														"name": "User"
													}
												},
												{
													"id": 646,
													"name": "weakPassword",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 175,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 581,
														"name": "WeakPassword"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														645,
														644,
														646
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 172,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 647,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 177,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										642,
										647
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 171,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 648,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 649,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 180,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 650,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 652,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 182,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 651,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 181,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 653,
													"name": "weakPassword",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 183,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														652,
														651,
														653
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 180,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 654,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 185,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										649,
										654
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 179,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1046,
			"name": "AuthenticatorAssuranceLevels",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 967,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "aal1"
					},
					{
						"type": "literal",
						"value": "aal2"
					}
				]
			}
		},
		{
			"id": 1120,
			"name": "CallRefreshTokenResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1155,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1121,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1123,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1158,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 1122,
									"name": "session",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1157,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 688,
										"name": "Session"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1123,
										1122
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1156,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1124,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1126,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1162,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								},
								{
									"id": 1125,
									"name": "session",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1161,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1126,
										1125
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1160,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 909,
			"name": "EmailOtpType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 726,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "signup"
					},
					{
						"type": "literal",
						"value": "invite"
					},
					{
						"type": "literal",
						"value": "magiclink"
					},
					{
						"type": "literal",
						"value": "recovery"
					},
					{
						"type": "literal",
						"value": "email_change"
					},
					{
						"type": "literal",
						"value": "email"
					}
				]
			}
		},
		{
			"id": 953,
			"name": "GenerateEmailChangeLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 793,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 954,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 956,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's email"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 796,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 957,
							"name": "newEmail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 800,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 958,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 801,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 959,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "literal",
										"value": "redirectTo"
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 955,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 794,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "email_change_current"
									},
									{
										"type": "literal",
										"value": "email_change_new"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								956,
								957,
								958,
								955
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 793,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 943,
			"name": "GenerateInviteOrMagiclinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 779,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 944,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 946,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's email"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 782,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 947,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 783,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 959,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "data"
											},
											{
												"type": "literal",
												"value": "redirectTo"
											}
										]
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 945,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 780,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "invite"
									},
									{
										"type": "literal",
										"value": "magiclink"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								946,
								947,
								945
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 779,
							"character": 46
						}
					]
				}
			}
		},
		{
			"id": 962,
			"name": "GenerateLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 815,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 937,
						"name": "GenerateSignupLinkParams"
					},
					{
						"type": "reference",
						"id": 943,
						"name": "GenerateInviteOrMagiclinkParams"
					},
					{
						"type": "reference",
						"id": 948,
						"name": "GenerateRecoveryLinkParams"
					},
					{
						"type": "reference",
						"id": 953,
						"name": "GenerateEmailChangeLinkParams"
					}
				]
			}
		},
		{
			"id": 976,
			"name": "GenerateLinkProperties",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "The properties related to the email link generated"
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 838,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 977,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 978,
							"name": "action_link",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The email link to send to the user.\nThe action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 843,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 979,
							"name": "email_otp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The raw email OTP.\nYou should send this in the email if you want your users to verify using an OTP instead of the action link."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 848,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 980,
							"name": "hashed_token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The hashed token appended to the action link."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 852,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 981,
							"name": "redirect_to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The URL appended to the action link."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 854,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 982,
							"name": "verification_type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The verification type that the email link is associated to."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 856,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 983,
								"name": "GenerateLinkType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								978,
								979,
								980,
								981,
								982
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 838,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 963,
			"name": "GenerateLinkResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 821,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 964,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 965,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 823,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 966,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 967,
													"name": "properties",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 824,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 976,
														"name": "GenerateLinkProperties"
													}
												},
												{
													"id": 968,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 825,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 728,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														967,
														968
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 823,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 969,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 827,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										965,
										969
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 822,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 970,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 971,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 830,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 972,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 973,
													"name": "properties",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 831,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 974,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 832,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														973,
														974
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 830,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 975,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 834,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										971,
										975
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 829,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 983,
			"name": "GenerateLinkType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 859,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "signup"
					},
					{
						"type": "literal",
						"value": "invite"
					},
					{
						"type": "literal",
						"value": "magiclink"
					},
					{
						"type": "literal",
						"value": "recovery"
					},
					{
						"type": "literal",
						"value": "email_change_current"
					},
					{
						"type": "literal",
						"value": "email_change_new"
					}
				]
			}
		},
		{
			"id": 948,
			"name": "GenerateRecoveryLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 786,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 949,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 951,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's email"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 789,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 952,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 790,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 959,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "literal",
										"value": "redirectTo"
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 950,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 787,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "recovery"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								951,
								952,
								950
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 786,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 937,
			"name": "GenerateSignupLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 772,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 938,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 940,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 774,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 942,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 776,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 959,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "data"
											},
											{
												"type": "literal",
												"value": "redirectTo"
											}
										]
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 941,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 775,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 939,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 773,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "signup"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								940,
								942,
								941,
								939
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 772,
							"character": 39
						}
					]
				}
			}
		},
		{
			"id": 557,
			"name": "GoTrueClientOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 58,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 558,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 566,
							"name": "autoRefreshToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 572,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 573,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 86,
													"character": 21
												}
											],
											"signatures": [
												{
													"id": 574,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 575,
															"name": "message",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 576,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 565,
							"name": "detectSessionInUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 570,
							"name": "fetch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Fetch"
							}
						},
						{
							"id": 571,
							"name": "flowType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 84,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 834,
								"name": "AuthFlowType"
							}
						},
						{
							"id": 578,
							"name": "hasCustomAuthorizationHeader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Set to \"true\" if there is a custom authorization header set globally.",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 97,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 560,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 561,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 62,
											"character": 12
										}
									],
									"indexSignature": {
										"id": 562,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 563,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 577,
							"name": "lock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 92,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 548,
								"name": "LockFunc"
							}
						},
						{
							"id": 567,
							"name": "persistSession",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 568,
							"name": "storage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1114,
								"name": "SupportedStorage"
							}
						},
						{
							"id": 564,
							"name": "storageKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 559,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 569,
							"name": "userStorage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Stores the user object in a separate storage location from the rest of the session data. When non-null, `storage` will only store a JSON object containing the access and refresh token and some adjacent metadata, while `userStorage` will only contain the user object under the key `storageKey + '-user'`.",
								"text": "When this option is set and cookie storage is used, `getSession()` and other functions that load a session from the cookie store might not return back a user. It's very important to always use `getUser()` to fetch a user object in those scenarios.\n",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 80,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1114,
								"name": "SupportedStorage"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								566,
								572,
								565,
								570,
								571,
								578,
								560,
								577,
								567,
								568,
								564,
								559,
								569
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 58,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 1117,
			"name": "InitializeResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1153,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1118,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1119,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1153,
									"character": 33
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1119
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1153,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 1179,
			"name": "JwtHeader",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1267,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1180,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1181,
							"name": "alg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1268,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "RS256"
									},
									{
										"type": "literal",
										"value": "ES256"
									},
									{
										"type": "literal",
										"value": "HS256"
									}
								]
							}
						},
						{
							"id": 1182,
							"name": "kid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1269,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1183,
							"name": "typ",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1270,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1181,
								1182,
								1183
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1267,
							"character": 24
						}
					]
				}
			}
		},
		{
			"id": 1194,
			"name": "JwtPayload",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1284,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 1184,
						"name": "RequiredClaims"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1195,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1284,
									"character": 42
								}
							],
							"indexSignature": {
								"id": 1196,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1197,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				]
			}
		},
		{
			"id": 548,
			"name": "LockFunc",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 56,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 549,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 56,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 550,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Provide your own global lock implementation instead of the default\nimplementation. The function should acquire a lock for the duration of the\n`fn` async function, such that no other client instances will be able to\nhold it at the same time.",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 556,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 551,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Name of the lock to be acquired."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 552,
									"name": "acquireTimeout",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "If negative, no timeout should occur. If positive it\n                      should throw an Error with an `isAcquireTimeout`\n                      property set to true if the operation fails to be\n                      acquired after this much time (ms)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 553,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The operation to execute when the lock is acquired.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 554,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 56,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 555,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 556,
																"name": "R"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 556,
										"name": "R"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			}
		},
		{
			"id": 997,
			"name": "MFAChallengeAndVerifyParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 892,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 998,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1000,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Verification code provided by the user."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 896,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 999,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor being verified. Returned in enroll()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 894,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1000,
								999
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 892,
							"character": 42
						}
					]
				}
			}
		},
		{
			"id": 993,
			"name": "MFAChallengeParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 885,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 994,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 996,
							"name": "channel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Messaging channel to use (e.g. whatsapp or sms). Only relevant for phone factors"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 889,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "sms"
									},
									{
										"type": "literal",
										"value": "whatsapp"
									}
								]
							}
						},
						{
							"id": 995,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor to be challenged. Returned in enroll()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 887,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								996,
								995
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 885,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 984,
			"name": "MFAEnrollParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 867,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 1141,
						"name": "MFAEnrollTOTPParams"
					},
					{
						"type": "reference",
						"id": 1146,
						"name": "MFAEnrollPhoneParams"
					}
				]
			}
		},
		{
			"id": 1146,
			"name": "MFAEnrollPhoneParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1201,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1147,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1148,
							"name": "factorType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The type of factor being enrolled."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1203,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "phone"
							}
						},
						{
							"id": 1149,
							"name": "friendlyName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Human readable name assigned to the factor."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1205,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1150,
							"name": "phone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Phone number associated with a factor. Number should conform to E.164 format"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1207,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1148,
								1149,
								1150
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1201,
							"character": 35
						}
					]
				}
			}
		},
		{
			"id": 1141,
			"name": "MFAEnrollTOTPParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1193,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1142,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1143,
							"name": "factorType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The type of factor being enrolled."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1195,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "totp"
							}
						},
						{
							"id": 1145,
							"name": "friendlyName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Human readable name assigned to the factor."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1199,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1144,
							"name": "issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Domain which the user is enrolled with."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1197,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1143,
								1145,
								1144
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1193,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 985,
			"name": "MFAUnenrollParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 869,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 986,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 987,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor being unenrolled."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 871,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								987
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 869,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 988,
			"name": "MFAVerifyParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 874,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 989,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 991,
							"name": "challengeId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the challenge being verified. Returned in challenge()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 879,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 992,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Verification code provided by the user."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 882,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 990,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor being verified. Returned in enroll()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 876,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								991,
								992,
								990
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 874,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 908,
			"name": "MobileOtpType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 725,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "sms"
					},
					{
						"type": "literal",
						"value": "phone_change"
					}
				]
			}
		},
		{
			"id": 655,
			"name": "OAuthResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 188,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 656,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 657,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 190,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 658,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 659,
													"name": "provider",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 191,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 545,
														"name": "Provider"
													}
												},
												{
													"id": 660,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 192,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														659,
														660
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 190,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 661,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 194,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										657,
										661
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 189,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 662,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 663,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 197,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 664,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 665,
													"name": "provider",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 198,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 545,
														"name": "Provider"
													}
												},
												{
													"id": 666,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 199,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														665,
														666
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 197,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 667,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 201,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										663,
										667
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 196,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1134,
			"name": "PageParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1172,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1135,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1136,
							"name": "page",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The page number"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1174,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1137,
							"name": "perPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Number of items returned per page"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1176,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1136,
								1137
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1172,
							"character": 25
						}
					]
				}
			}
		},
		{
			"id": 1127,
			"name": "Pagination",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1165,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1128,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1130,
							"name": "lastPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1168,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1129,
							"name": "nextPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1167,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 1131,
							"name": "total",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1169,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1130,
								1129,
								1131
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1165,
							"character": 25
						}
					],
					"indexSignature": {
						"id": 1132,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1133,
								"name": "key",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			}
		},
		{
			"id": 545,
			"name": "Provider",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "One of the providers supported by GoTrue."
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "apple"
					},
					{
						"type": "literal",
						"value": "azure"
					},
					{
						"type": "literal",
						"value": "bitbucket"
					},
					{
						"type": "literal",
						"value": "discord"
					},
					{
						"type": "literal",
						"value": "facebook"
					},
					{
						"type": "literal",
						"value": "figma"
					},
					{
						"type": "literal",
						"value": "github"
					},
					{
						"type": "literal",
						"value": "gitlab"
					},
					{
						"type": "literal",
						"value": "google"
					},
					{
						"type": "literal",
						"value": "kakao"
					},
					{
						"type": "literal",
						"value": "keycloak"
					},
					{
						"type": "literal",
						"value": "linkedin"
					},
					{
						"type": "literal",
						"value": "linkedin_oidc"
					},
					{
						"type": "literal",
						"value": "notion"
					},
					{
						"type": "literal",
						"value": "slack"
					},
					{
						"type": "literal",
						"value": "slack_oidc"
					},
					{
						"type": "literal",
						"value": "spotify"
					},
					{
						"type": "literal",
						"value": "twitch"
					},
					{
						"type": "literal",
						"value": "twitter"
					},
					{
						"type": "literal",
						"value": "workos"
					},
					{
						"type": "literal",
						"value": "zoom"
					},
					{
						"type": "literal",
						"value": "fly"
					}
				]
			}
		},
		{
			"id": 1184,
			"name": "RequiredClaims",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1273,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1185,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1192,
							"name": "aal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1280,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1046,
								"name": "AuthenticatorAssuranceLevels"
							}
						},
						{
							"id": 1188,
							"name": "aud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1276,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1189,
							"name": "exp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1277,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1190,
							"name": "iat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1278,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1186,
							"name": "iss",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1274,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1191,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1279,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1193,
							"name": "session_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1281,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1187,
							"name": "sub",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1275,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1192,
								1188,
								1189,
								1190,
								1186,
								1191,
								1193,
								1187
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1273,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 910,
			"name": "ResendParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 728,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 911,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 913,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 731,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 914,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 732,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 915,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 917,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 736,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 916,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A URL to send the user to after they have signed-in."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 734,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														917,
														916
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 732,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 912,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 730,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 909,
												"name": "EmailOtpType"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "signup"
													},
													{
														"type": "literal",
														"value": "email_change"
													}
												]
											}
										],
										"qualifiedName": "Extract",
										"package": "typescript",
										"name": "Extract"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										913,
										914,
										912
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 729,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 918,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 921,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 742,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 922,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 923,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 744,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														923
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 742,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 920,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 741,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 919,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 740,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 908,
												"name": "MobileOtpType"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "sms"
													},
													{
														"type": "literal",
														"value": "phone_change"
													}
												]
											}
										],
										"qualifiedName": "Extract",
										"package": "typescript",
										"name": "Extract"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										921,
										920,
										919
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 739,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 668,
			"name": "SSOResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 204,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 669,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 670,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 206,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 671,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 672,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "URL to open in a browser which will complete the sign-in flow by\ntaking the user to the identity provider's authentication flow.",
														"text": "On browsers you can set the URL to `window.location.href` to take\nthe user to the authentication flow.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 214,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														672
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 206,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 673,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 216,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										670,
										673
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 205,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 674,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 675,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 219,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 676,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 220,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										675,
										676
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 218,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 781,
			"name": "SignInAnonymouslyCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 488,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 782,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 783,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 489,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 784,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 786,
											"name": "captchaToken",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Verification token received when the user completes the captcha on the site."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 497,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 785,
											"name": "data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
												"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 495,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												786,
												785
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 489,
											"character": 12
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								783
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 488,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 847,
			"name": "SignInWithIdTokenCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 615,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 848,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 852,
							"name": "access_token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the ID token contains an `at_hash` claim, then the hash of this value is compared to the value in the ID token."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 621,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 853,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the ID token contains a `nonce` claim, then the hash of this value is compared to the value in the ID token."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 623,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 854,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 624,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 855,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 856,
											"name": "captchaToken",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Verification token received when the user completes the captcha on the site."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 626,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												856
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 624,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 849,
							"name": "provider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Provider name or OIDC `iss` value identifying which provider should be used to verify the provided token. Supported names: `google`, `apple`, `azure`, `facebook`, `kakao`, `keycloak` (deprecated)."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 617,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "google"
									},
									{
										"type": "literal",
										"value": "apple"
									},
									{
										"type": "literal",
										"value": "azure"
									},
									{
										"type": "literal",
										"value": "facebook"
									},
									{
										"type": "literal",
										"value": "kakao"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 850,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 617,
															"character": 76
														}
													]
												}
											}
										]
									}
								]
							}
						},
						{
							"id": 851,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "OIDC ID token issued by the specified provider. The `iss` claim in the ID token must match the supplied provider. Some ID tokens contain an `at_hash` which require that you provide an `access_token` value to be accepted properly. If the token contains a `nonce` claim you must supply the nonce used to obtain the ID token."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 619,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								852,
								853,
								854,
								849,
								851
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 615,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 835,
			"name": "SignInWithOAuthCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 600,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 836,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 838,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 603,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 839,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 842,
											"name": "queryParams",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "An object of query params"
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 609,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 843,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 609,
															"character": 18
														}
													],
													"indexSignature": {
														"id": 844,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 845,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										},
										{
											"id": 840,
											"name": "redirectTo",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A URL to send the user to after they are confirmed."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 605,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 841,
											"name": "scopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A space-separated list of scopes granted to the OAuth application."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 607,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 846,
											"name": "skipBrowserRedirect",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 611,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												842,
												840,
												841,
												846
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 603,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 837,
							"name": "provider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "One of the providers supported by GoTrue."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 602,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 545,
								"name": "Provider"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								838,
								837
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 600,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 804,
			"name": "SignInWithPasswordCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 539,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 805,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 806,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's email address."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 542,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 808,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 545,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 809,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 810,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 547,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														810
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 545,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 807,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 544,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										806,
										808,
										807
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 540,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 811,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 814,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 555,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 815,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 816,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 557,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														816
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 555,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 813,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 554,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 812,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's phone number."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 552,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										814,
										813,
										812
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 550,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 817,
			"name": "SignInWithPasswordlessCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 561,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 818,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 819,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's email address."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 564,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 820,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 565,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 821,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 825,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 577,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 824,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 575,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 822,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The redirect url embedded in the email link"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 567,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 823,
													"name": "shouldCreateUser",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "If set to false, this method will not create a new user. Defaults to true."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 569,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														825,
														824,
														822,
														823
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 565,
													"character": 16
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										819,
										820
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 562,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 826,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 828,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 583,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 829,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 832,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 593,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 833,
													"name": "channel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Messaging channel to use (e.g. whatsapp or sms)"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 595,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "sms"
															},
															{
																"type": "literal",
																"value": "whatsapp"
															}
														]
													}
												},
												{
													"id": 831,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 591,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 830,
													"name": "shouldCreateUser",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "If set to false, this method will not create a new user. Defaults to true."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 585,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														832,
														833,
														831,
														830
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 583,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 827,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's phone number."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 582,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										828,
										827
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 580,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 924,
			"name": "SignInWithSSO",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 748,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 925,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 927,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 753,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 928,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 930,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 757,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 929,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A URL to send the user to after they have signed-in."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 755,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														930,
														929
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 753,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 926,
									"name": "providerId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "UUID of the SSO provider to invoke single-sign on to."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 751,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										927,
										926
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 749,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 931,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 932,
									"name": "domain",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Domain name of the organization for which to invoke single-sign on."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 762,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 933,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 764,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 934,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 936,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 768,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 935,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A URL to send the user to after they have signed-in."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 766,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														936,
														935
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 764,
													"character": 16
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										932,
										933
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 760,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1138,
			"name": "SignOut",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1179,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1139,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1140,
							"name": "scope",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines which sessions should be\nlogged out. Global means all\nsessions by this account. Local\nmeans only this session. Others\nmeans all other sessions except the\ncurrent one. When using others,\nthere is no sign-out event fired on\nthe current session!"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1190,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "global"
									},
									{
										"type": "literal",
										"value": "local"
									},
									{
										"type": "literal",
										"value": "others"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1140
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1179,
							"character": 22
						}
					]
				}
			}
		},
		{
			"id": 1206,
			"name": "SignOutScope",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1297,
					"character": 12
				}
			],
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "intrinsic",
					"name": "number"
				},
				"objectType": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"id": 1205,
						"name": "SIGN_OUT_SCOPES"
					}
				}
			}
		},
		{
			"id": 787,
			"name": "SignUpWithPasswordCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 501,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 788,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 789,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's email address."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 504,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 791,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 507,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 792,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 795,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 517,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 794,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 515,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 793,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The redirect url embedded in the email link"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 509,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														795,
														794,
														793
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 507,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 790,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 506,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										789,
										791,
										790
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 502,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 796,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 799,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 525,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 800,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 802,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 533,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 803,
													"name": "channel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Messaging channel to use (e.g. whatsapp or sms)"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 535,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "sms"
															},
															{
																"type": "literal",
																"value": "whatsapp"
															}
														]
													}
												},
												{
													"id": 801,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 531,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														802,
														803,
														801
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 525,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 798,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 524,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 797,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's phone number."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 522,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										799,
										798,
										797
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 520,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 857,
			"name": "SolanaWallet",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 630,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 858,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 862,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 632,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 863,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 864,
													"name": "toBase58",
													"kind": 2048,
													"kindString": "Method",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 633,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 865,
															"name": "toBase58",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											],
											"groups": [
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														864
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 632,
													"character": 14
												}
											]
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 859,
							"name": "signIn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 631,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 860,
									"name": "signIn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 861,
											"name": "inputs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "SolanaSignInInput",
													"package": "@solana/wallet-standard-features",
													"name": "SolanaSignInInput"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "SolanaSignInOutput",
														"package": "@solana/wallet-standard-features",
														"name": "SolanaSignInOutput"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"qualifiedName": "SolanaSignInOutput",
															"package": "@solana/wallet-standard-features",
															"name": "SolanaSignInOutput"
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 866,
							"name": "signMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 636,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 867,
									"name": "signMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 868,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Uint8Array",
												"package": "typescript",
												"name": "Uint8Array"
											}
										},
										{
											"id": 869,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Uint8Array",
														"package": "typescript",
														"name": "Uint8Array"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								862
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								859,
								866
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 630,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 870,
			"name": "SolanaWeb3Credentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 639,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 871,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 872,
									"name": "chain",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 641,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": "solana"
									}
								},
								{
									"id": 875,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 649,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 876,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 878,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 654,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 879,
													"name": "signInWithSolana",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 656,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "SolanaSignInInput",
																		"package": "@solana/wallet-standard-features",
																		"name": "SolanaSignInInput"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "version"
																			},
																			{
																				"type": "literal",
																				"value": "chain"
																			},
																			{
																				"type": "literal",
																				"value": "domain"
																			},
																			{
																				"type": "literal",
																				"value": "uri"
																			},
																			{
																				"type": "literal",
																				"value": "statement"
																			}
																		]
																	}
																],
																"qualifiedName": "Omit",
																"package": "typescript",
																"name": "Omit"
															}
														],
														"qualifiedName": "Partial",
														"package": "typescript",
														"name": "Partial"
													}
												},
												{
													"id": 877,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "URL to use with the wallet interface. Some wallets do not allow signing a message for URLs different from the current page."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 651,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														878,
														879,
														877
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 649,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 874,
									"name": "statement",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Optional statement to include in the Sign in with Solana message. Must not include new line characters. Most wallets like Phantom **require specifying a statement!**"
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 647,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 873,
									"name": "wallet",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Wallet interface to use. If not specified will default to `window.solana`."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 644,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 857,
										"name": "SolanaWallet"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										872,
										875,
										874,
										873
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 640,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 880,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 881,
									"name": "chain",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 662,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": "solana"
									}
								},
								{
									"id": 882,
									"name": "message",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Sign in with Solana compatible message. Must include `Issued At`, `URI` and `Version`."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 665,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 884,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 670,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 885,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 886,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 672,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														886
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 670,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 883,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Ed25519 signature of the message."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 668,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Uint8Array",
										"package": "typescript",
										"name": "Uint8Array"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										881,
										882,
										884,
										883
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 661,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1114,
			"name": "SupportedStorage",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1140,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Storage",
										"package": "typescript",
										"name": "Storage"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "getItem"
											},
											{
												"type": "literal",
												"value": "setItem"
											},
											{
												"type": "literal",
												"value": "removeItem"
											}
										]
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						],
						"name": "PromisifyMethods"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1115,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1116,
									"name": "isServer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set to `true` signals to the library that the storage medium is used\non a server and the values may not be authentic, such as reading from\nrequest cookies. Implementations should not set this to true if the client\nis used on a server that reads storage information from authenticated\nsources, such as a secure database or file."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1150,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1116
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1142,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 677,
			"name": "UserResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 223,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 678,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 679,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 225,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 680,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 681,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 226,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 728,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														681
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 225,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 682,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 228,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										679,
										682
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 224,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 683,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 684,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 231,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 685,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 686,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 232,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														686
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 231,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 687,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 234,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 1225,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										684,
										687
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 230,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 888,
			"name": "VerifyOtpParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 678,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 889,
						"name": "VerifyMobileOtpParams"
					},
					{
						"type": "reference",
						"id": 897,
						"name": "VerifyEmailOtpParams"
					},
					{
						"type": "reference",
						"id": 905,
						"name": "VerifyTokenHashParams"
					}
				]
			}
		},
		{
			"id": 581,
			"name": "WeakPassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 101,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 582,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 584,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 103,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 583,
							"name": "reasons",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 579,
									"name": "WeakPasswordReasons"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								584,
								583
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 101,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 579,
			"name": "WeakPasswordReasons",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 100,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "length"
					},
					{
						"type": "literal",
						"value": "characters"
					},
					{
						"type": "literal",
						"value": "pwned"
					},
					{
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 580,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 100,
											"character": 80
										}
									]
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 887,
			"name": "Web3Credentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 676,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"id": 870,
				"name": "SolanaWeb3Credentials"
			}
		},
		{
			"id": 519,
			"name": "AuthAdminApi",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/AuthAdminApi.ts",
					"line": 3,
					"character": 6
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"id": 1,
					"name": "default"
				}
			},
			"defaultValue": "GoTrueAdminApi"
		},
		{
			"id": 520,
			"name": "AuthClient",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/AuthClient.ts",
					"line": 3,
					"character": 6
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"id": 78,
					"name": "default"
				}
			},
			"defaultValue": "GoTrueClient"
		},
		{
			"id": 1205,
			"name": "SIGN_OUT_SCOPES",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1296,
					"character": 13
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "readonly",
				"target": {
					"type": "tuple",
					"elements": [
						{
							"type": "literal",
							"value": "global"
						},
						{
							"type": "literal",
							"value": "local"
						},
						{
							"type": "literal",
							"value": "others"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 534,
			"name": "lockInternals",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"tags": [
					{
						"tag": "experimental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/locks.ts",
					"line": 6,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 535,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 536,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/lib/locks.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "!!(\n    globalThis &&\n    supportsLocalStorage() &&\n    globalThis.localStorage &&\n    globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'\n  )"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								536
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1210,
			"name": "isAuthApiError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 41,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1211,
					"name": "isAuthApiError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1212,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 1235,
							"name": "AuthApiError"
						}
					}
				}
			]
		},
		{
			"id": 1207,
			"name": "isAuthError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 26,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1208,
					"name": "isAuthError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1209,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 1225,
							"name": "AuthError"
						}
					}
				}
			]
		},
		{
			"id": 1216,
			"name": "isAuthImplicitGrantRedirectError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 105,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1217,
					"name": "isAuthImplicitGrantRedirectError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1218,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 1292,
							"name": "AuthImplicitGrantRedirectError"
						}
					}
				}
			]
		},
		{
			"id": 1219,
			"name": "isAuthRetryableFetchError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 135,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1220,
					"name": "isAuthRetryableFetchError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1221,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 1346,
							"name": "AuthRetryableFetchError"
						}
					}
				}
			]
		},
		{
			"id": 1213,
			"name": "isAuthSessionMissingError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 72,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1214,
					"name": "isAuthSessionMissingError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1215,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 1267,
							"name": "AuthSessionMissingError"
						}
					}
				}
			]
		},
		{
			"id": 1222,
			"name": "isAuthWeakPasswordError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 157,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1223,
					"name": "isAuthWeakPasswordError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1224,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 1356,
							"name": "AuthWeakPasswordError"
						}
					}
				}
			]
		},
		{
			"id": 521,
			"name": "navigatorLock",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/locks.ts",
					"line": 59,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 522,
					"name": "navigatorLock",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Implements a global exclusive lock using the Navigator LockManager API. It\nis available on all browsers released after 2022-03-15 with Safari being the\nlast one to release support. If the API is not available, this function will\nthrow. Make sure you check availablility before configuring {@link\nGoTrueClient}.",
						"text": "You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\nlocal storage item to `true`.\n\nInternals:\n\nSince the LockManager API does not preserve stack traces for the async\nfunction passed in the `request` method, a trick is used where acquiring the\nlock releases a previously started promise to run the operation in the `fn`\nfunction. The lock waits for that promise to finish (with or without error),\nwhile the function will finally wait for the result anyway.\n"
					},
					"typeParameter": [
						{
							"id": 523,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 524,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Name of the lock to be acquired."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 525,
							"name": "acquireTimeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "If negative, no timeout. If 0 an error is thrown if\n                      the lock can't be acquired without waiting. If positive, the lock acquire\n                      will time out after so many milliseconds. An error is\n                      a timeout if it has `isAcquireTimeout` set to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 526,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The operation to run once the lock is acquired.\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 527,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 528,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 523,
														"name": "R"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 523,
								"name": "R"
							}
						],
						"qualifiedName": "Promise",
						"package": "typescript",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 537,
			"name": "processLock",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/locks.ts",
					"line": 171,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 538,
					"name": "processLock",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Implements a global exclusive lock that works only in the current process.\nUseful for environments like React Native or other non-browser\nsingle-process (i.e. no concept of \"tabs\") environments.",
						"text": "Use {@link #navigatorLock} in browser environments.\n"
					},
					"typeParameter": [
						{
							"id": 539,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 540,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Name of the lock to be acquired."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 541,
							"name": "acquireTimeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "If negative, no timeout. If 0 an error is thrown if\n                      the lock can't be acquired without waiting. If positive, the lock acquire\n                      will time out after so many milliseconds. An error is\n                      a timeout if it has `isAcquireTimeout` set to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 542,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The operation to run once the lock is acquired.\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 543,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 544,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 539,
														"name": "R"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 539,
								"name": "R"
							}
						],
						"qualifiedName": "Promise",
						"package": "typescript",
						"name": "Promise"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				1235,
				1225,
				1292,
				1283,
				1368,
				1275,
				1319,
				1346,
				1267,
				1245,
				1356,
				1255,
				1,
				78,
				529
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				697,
				760,
				713,
				959,
				1107,
				1058,
				1198,
				688,
				773,
				728,
				721,
				754,
				701,
				725,
				897,
				889,
				905
			]
		},
		{
			"title": "Type Aliases",
			"kind": 4194304,
			"children": [
				547,
				546,
				834,
				1091,
				1082,
				1104,
				1095,
				1024,
				1167,
				1014,
				1151,
				1047,
				1035,
				1015,
				1001,
				612,
				585,
				598,
				627,
				640,
				1046,
				1120,
				909,
				953,
				943,
				962,
				976,
				963,
				983,
				948,
				937,
				557,
				1117,
				1179,
				1194,
				548,
				997,
				993,
				984,
				1146,
				1141,
				985,
				988,
				908,
				655,
				1134,
				1127,
				545,
				1184,
				910,
				668,
				781,
				847,
				835,
				804,
				817,
				924,
				1138,
				1206,
				787,
				857,
				870,
				1114,
				677,
				888,
				581,
				579,
				887
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				519,
				520,
				1205,
				534
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				1210,
				1207,
				1216,
				1219,
				1213,
				1222,
				521,
				537
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}